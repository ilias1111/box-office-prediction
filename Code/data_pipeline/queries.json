{
  "movies": "SELECT * FROM movie-dataset-291206.movies.main",
  "genres": "SELECT * FROM movie-dataset-291206.movies.genres",
  "movies_with_sequel": "SELECT DISTINCT movie_id FROM `movie-dataset-291206.movies.collections`",
  "collection_metrics": "SELECT base.movie_id, MAX(m2.revenue_world) as collection_max, AVG(m2.revenue_world) AS collection_avg, count(m2.revenue_world) as collection_count FROM `movie-dataset-291206.movies.collections` as base JOIN `movie-dataset-291206.movies.collections` as extra on base.collection_id = extra.collection_id JOIN `movie-dataset-291206.movies.main` as m1 on base.movie_id = m1.movie_id JOIN `movie-dataset-291206.movies.main` as m2 on extra.movie_id = m2.movie_id WHERE m2.release_date < m1.release_date GROUP BY base.movie_id",
  "keywords": "SELECT * FROM movie-dataset-291206.movies.keyword",
  "keywords_metrics": "SELECT base.movie_id, MAX(m2.revenue_world) as keyword_max, AVG(m2.revenue_world) AS keyword_avg, count(m2.revenue_world) as keyword_count FROM `movie-dataset-291206.movies.keyword` as base JOIN `movie-dataset-291206.movies.keyword` as extra on base.keyword_id = extra.keyword_id JOIN `movie-dataset-291206.movies.main` as m1 on base.movie_id = m1.movie_id JOIN `movie-dataset-291206.movies.main` as m2 on extra.movie_id = m2.movie_id WHERE m2.release_date < m1.release_date GROUP BY base.movie_id",
  "productions": "SELECT movie_id, pr.company_id, company_name FROM movie-dataset-291206.movies.production_companies as pr JOIN `movie-dataset-291206.movies.production_companies_data` as d on d.company_id = pr.company_id",
  "cast_keys": "SELECT person_id FROM `movie-dataset-291206.movies.cast` as cas WHERE cas.order < 4 GROUP BY person_id HAVING COUNT(movie_id) > 10",
  "cast_data": "SELECT person_id, movie_id FROM `movie-dataset-291206.movies.cast`"
}